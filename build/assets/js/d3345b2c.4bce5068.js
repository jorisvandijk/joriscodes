"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4753],{7191:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"linux/Scripting/ScreenShot","title":"ScreenShot","description":"So I have been using scrot to take screenshots for ages. The only downside has been the inability to grab just a portion of the screen. There are newer applications that do this out of the box. Applications like Flameshot. The downside of that application is that it pulls the entire Qt5-base and several other Qt applications down with it. I do not use any Qt applications, so having to pull down all of those just to take a partial screenshot is insane to me.","source":"@site/docs/linux/Scripting/ScreenShot.md","sourceDirName":"linux/Scripting","slug":"/linux/Scripting/ScreenShot","permalink":"/linux/Scripting/ScreenShot","draft":false,"unlisted":false,"editUrl":"https://codeberg.org/jorisvandijk/joriscodes/src/branch/main/docs/linux/Scripting/ScreenShot.md","tags":[{"inline":true,"label":"Linux","permalink":"/tags/linux"},{"inline":true,"label":"Scripting","permalink":"/tags/scripting"}],"version":"current","lastUpdatedBy":"Joris","lastUpdatedAt":1731713835000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2,"tags":["Linux","Scripting"]},"sidebar":"docsSidebar","previous":{"title":"Arch Linux Maintenance","permalink":"/linux/Scripting/ArchMaintenance"},"next":{"title":"Barless","permalink":"/linux/Scripting/barless"}}');var s=t(4848),o=t(8453);const r={sidebar_position:2,tags:["Linux","Scripting"]},a="ScreenShot",c={},l=[];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"screenshot",children:"ScreenShot"})}),"\n",(0,s.jsxs)(n.p,{children:["So I have been using ",(0,s.jsx)(n.code,{children:"scrot"})," to take screenshots for ages. The only downside has been the inability to grab just a portion of the screen. There are newer applications that do this out of the box. Applications like ",(0,s.jsx)(n.code,{children:"Flameshot"}),". The downside of that application is that it pulls the entire Qt5-base and several other Qt applications down with it. I do not use any Qt applications, so having to pull down all of those just to take a partial screenshot is insane to me."]}),"\n",(0,s.jsxs)(n.p,{children:["So I have been taking full screen screenshots and cropping them in ",(0,s.jsx)(n.code,{children:"Gimp"})," for ages now. Recently though I came across a Reddit post with an amazingly simple solution to my problem. It uses ",(0,s.jsx)(n.code,{children:"xclip"}),"'s selection flag with ",(0,s.jsx)(n.code,{children:"scrot"})," to get this functionality, which I find brilliant. I have adapted this into a bash script, which can be used with any window manager."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"showLineNumbers",children:'#!/usr/bin/env bash\n\n#\tScreenShot 2.0\n#\tTake a screenshot, save to directory and copy to clipboard.\n#\tDependencies: scrot, xclip\n#\n#\tBy Joris van Dijk | Jorisvandijk.com \n#\tLicensed under the GNU General Public License v3.0\t\n\nif [[ $1 == "s" ]]; then\n\tscrot ~/Pictures/%d-%m-%Y-%T.png -e \'xclip -selection c -t image/png < $f\'\nelif [[ $1 == "p" ]]; then\n\tscrot ~/Pictures/%d-%m-%Y-%T.png -s -e \'xclip -selection c -t image/png < $f\'\nelse\n\techo "Wrong flag!"\nfi\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["This script will save the screenshot to your ",(0,s.jsx)(n.code,{children:"~/Pictures"})," directory. If you do not have this directory, you will have to create it before running the script!"]})}),"\n",(0,s.jsxs)(n.p,{children:["Save the script as ",(0,s.jsx)(n.code,{children:"ScreenShot"}),", make it executable and use it like so:"]}),"\n",(0,s.jsx)(n.p,{children:"Take a fullscreen screenshot:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"./ScreenShot s\n"})}),"\n",(0,s.jsx)(n.p,{children:"Take a partial screenshot:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"./ScreenShot p\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Obviously it's best to use this script in a key binding. To see how I use it, check out my ",(0,s.jsx)(n.a,{href:"https://joris.codes/#dotfiles",children:"dotfiles"}),"."]})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);